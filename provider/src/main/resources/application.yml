dubbo:
  application:
    name: dubbo-provider
  registry:
    address: 139.196.175.139:2181
    protocol: zookeeper
    check: false
  protocol:
    name: dubbo
    port: 30006
  monitor:
    protocol: register
  consumer:
    check: false
    timeout: 3000

spring:
  servlet:
    multipart:
      max-file-size: 5000MB
      max-request-size: 5000MB
      enabled: true

  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://139.196.175.139/kill?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.jdbc.Driver


  jackson:
    default-property-inclusion: ALWAYS
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss

  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 20000
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1ms
        min-idle: 8
  kafka:
    bootstrap-servers: 139.196.175.139:9092
    producer: # producer 生产者
      retries: 0 # 重试次数
      acks: 1 # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      batch-size: 16384 # 批量大小
      buffer-memory: 33554432 # 生产端缓冲区大小
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer: # consumer消费者
      group-id: test-consumer-group # 默认的消费组ID
      enable-auto-commit: true # 是否自动提交offset
      auto-commit-interval: 100 # 提交offset延时(接收到消息后多久提交offset)
      auto-offset-reset: latest
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset;
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

server:
  port: 6669

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.dubbo.provider.model

#showSql
logging:
  level:
    com:
      dubbo:
        provider:
          mapper : debug










