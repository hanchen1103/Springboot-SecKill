dubbo:
  application:
    name:  dubbo-consumer
  registry:
    address: 120.78.188.52:2181
    protocol: zookeeper
    check: false
  monitor:
    protocol: register
  consumer:
    check:  false
    timeout: 3000
  protocol:
    port: 20886

server:
  port: 6667

spring:
  servlet:
    multipart:
      max-file-size: 5000MB
      max-request-size: 5000MB
      enabled: true
  main:
    allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册

  kafka:
    bootstrap-servers: 120.78.188.52:9092
    consumer:
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://139.196.175.139/kill?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver


  jackson:
    default-property-inclusion: ALWAYS
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss

  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 20000
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1ms
        min-idle: 8
    password:

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.dubbo.consumer.model

#showSql
logging:
  level:
    com:
      dubbo:
        consumer:
          mapper : debug

redis:
  limit: 5



my:
  url: 120.78.188.52
  port: 7080
